version: '3.8'

services:
  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/development/Dockerfile.frontend
    ports:
      - '3000:3000'
    environment:
      API_CONTAINER_URL: ${API_CONTAINER_URL}
      API_CLIENT_URL: ${API_CLIENT_URL}
      API_TOKEN: ${API_TOKEN_DEVELOPMENT}
      WATCHPACK_POLLING: true
    volumes:
      - ../frontend/public:/frontend/public
      - ../frontend/src:/frontend/src
    restart: always
    networks:
      - internal
    depends_on:
      - strapi

  strapi:
    build:
      context: ../strapi
      dockerfile: ../docker/development/Dockerfile.strapi
    ports:
      - '1337:1337'
    environment:
      APP_KEYS: ${APP_KEYS}
      API_CLIENT_URL: ${API_CLIENT_URL}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: database
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_SSL: ${DATABASE_SSL}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ../strapi/config:/strapi/config
      - ../strapi/database:/strapi/database
      - ../strapi/public:/strapi/public
      - ../strapi/src:/strapi/src
    restart: always
    networks:
      - internal
    depends_on:
      - database

  database:
    image: postgres:14-alpine
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgresql_database:/var/lib/postgresql/data
    restart: always
    networks:
      - internal

volumes:
  postgresql_database:

networks:
  internal: